import React from 'react'
import ReactDOM from 'react-dom'
import './index.css'

const bankOne = [
  {
    keyCode: 81,
    keyTrigger: 'Q',
    id: 'Heater-1',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',
  },
  {
    keyCode: 87,
    keyTrigger: 'W',
    id: 'Heater-2',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',
  },
  {
    keyCode: 69,
    keyTrigger: 'E',
    id: 'Heater-3',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',
  },
  {
    keyCode: 65,
    keyTrigger: 'A',
    id: 'Heater-4',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',
  },
  {
    keyCode: 83,
    keyTrigger: 'S',
    id: 'Clap',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',
  },
  {
    keyCode: 68,
    keyTrigger: 'D',
    id: 'Open-HH',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',
  },
  {
    keyCode: 90,
    keyTrigger: 'Z',
    id: "Kick-n'-Hat",
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',
  },
  {
    keyCode: 88,
    keyTrigger: 'X',
    id: 'Kick',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',
  },
  {
    keyCode: 67,
    keyTrigger: 'C',
    id: 'Closed-HH',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',
  },
]

const bankTwo = [
  {
    keyCode: 81,
    keyTrigger: 'Q',
    id: 'Chord-1',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3',
  },
  {
    keyCode: 87,
    keyTrigger: 'W',
    id: 'Chord-2',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3',
  },
  {
    keyCode: 69,
    keyTrigger: 'E',
    id: 'Chord-3',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3',
  },
  {
    keyCode: 65,
    keyTrigger: 'A',
    id: 'Shaker',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3',
  },
  {
    keyCode: 83,
    keyTrigger: 'S',
    id: 'Open-HH',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3',
  },
  {
    keyCode: 68,
    keyTrigger: 'D',
    id: 'Closed-HH',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3',
  },
  {
    keyCode: 90,
    keyTrigger: 'Z',
    id: 'Punchy-Kick',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3',
  },
  {
    keyCode: 88,
    keyTrigger: 'X',
    id: 'Side-Stick',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3',
  },
  {
    keyCode: 67,
    keyTrigger: 'C',
    id: 'Snare',
    url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3',
  },
]

const App = () => {
  const [state, setState] = React.useState({
    power: true,
    bank: true,
    volume: 0.5,
    display: '',
  })

  // document.addEventListener('keydown', (e) => {
  //   // console.log(state.power)
  //   const id = e.key.toUpperCase()
  //   const audio = document.getElementById(id)
  //   if (audio && state.power) {
  //     audio.volume = state.volume
  //     // console.log(audio.volume)

  //     audio.currentTime = 0
  //     audio.play()

  //     const display = document.querySelector('#display')
  //     // console.log(display)
  //     const sound = audio.parentNode.id
  //     display.textContent = sound

  //     const parent = audio.parentNode
  //     parent.classList.add('active')
  //     setTimeout(() => {
  //       parent.classList.remove('active')
  //     }, 300)
  //   }
  // })

  const bankToggle = () => {
    if (state.power) {
      setState((prev) => ({
        ...prev,
        bank: !state.bank,
      }))
    }
  }

  const powerToggle = () => {
    setState((prev) => ({
      ...prev,
      display: '',
      power: !state.power,
    }))
  }
  console.log(state.display)

  const handleChange = (e) => {
    if (state.power) {
      setState((prev) => ({
        ...prev,
        volume: e.target.value,
        display: `Volume: ${Math.floor(state.volume * 100)}`,
      }))
      setTimeout(() => {
        setState((prev) => ({
          ...prev,
          display: '',
        }))
      }, 1000)
    }
  }
  // console.log(state.bank)
  const padElements = state.power
    ? (state.bank ? bankOne : bankTwo).map((obj) => {
        return (
          <Pad
            keyCode={obj.keyCode}
            keyTrigger={obj.keyTrigger}
            id={obj.id}
            url={obj.url}
            {...state}
          />
        )
      })
    : (state.bank ? bankOne : bankTwo).map((obj) => {
        return (
          <Pad
            keyCode={obj.keyCode}
            keyTrigger={obj.keyTrigger}
            id={obj.id}
            url=''
            {...state}
          />
        )
      })

  return (
    <div className='container'>
      <div id='drum-machine'>
        <div className='drum-pad-container'>{padElements}</div>
        <div className='control'>
          <div className='switch-container' onClick={powerToggle}>
            Power
            <div className='switch-box'>
              <div
                className='switch'
                style={{ float: state.power ? 'right' : 'left' }}
              ></div>
            </div>
          </div>
          <div id='display'>{state.volume === 0.5 || state.display}</div>
          <div className='volume'>
            <input
              className='volume-input'
              type='range'
              value={state.volume}
              max='1'
              min='0'
              step='0.01'
              onChange={handleChange}
            />
          </div>
          <div className='switch-container' onClick={bankToggle}>
            Bank
            <div className='switch-box'>
              <div
                className='switch'
                style={{ float: state.bank ? 'right' : 'left' }}
              ></div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

//  {
//     keyCode: 81,
//     keyTrigger: 'Q',
//     id: 'Heater-1',
//     url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'
//   },

const Pad = (props) => {
  // console.log(props)
  const [active, setActive] = React.useState(false)

  const playSound = () => {
    // console.log(audio)
    if (props.power) {
      // console.log(props.power)
      const audio = document.getElementById(props.keyTrigger)
      audio.volume = props.volume
      // console.log(audio.volume)

      audio.currentTime = 0
      audio.play()

      const display = document.querySelector('#display')
      // console.log(display)
      const sound = audio.parentNode.id
      display.textContent = sound

      setActive((prev) => !prev)
      setTimeout(() => {
        setActive((prev) => !prev)
      }, 300)
    }
  }

  const handlePress = (e) => {
    if (e.key === props.keyTrigger.toLowerCase()) {
      playSound()
    }
  }
  // console.log(props.power)

  React.useEffect(() => {
    // powerの状態に応じてonOffしたい。
    console.log('hello', props.power)

    window.document.addEventListener('keydown', (e) => {
      handlePress(e)
    })
    return () => {
      window.document.removeEventListener('keydown', (e) => {
        handlePress(e)
      })
    }
  }, [])

  // console.log(props.active)
  return (
    <div
      className={`drum-pad ${active && 'active'} `}
      id={props.id}
      onClick={playSound}
    >
      {props.keyTrigger}
      <audio
        src={props.url}
        className='clip'
        id={props.keyTrigger}
        data-id={props.keyCode}
      ></audio>
    </div>
  )
}

ReactDOM.render(<App />, document.getElementById('root'))
